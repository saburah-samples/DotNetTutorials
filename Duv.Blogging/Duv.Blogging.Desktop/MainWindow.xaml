<Window x:Class="Duv.Blogging.Desktop.MainWindow"
        xmlns:vm="clr-namespace:Duv.Blogging.Desktop"
        xmlns:m="clr-namespace:Duv.Blogging.Desktop.Models"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <vm:MainViewModel x:Key="MainViewModel"/>

        <Style TargetType="ListBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="Border" x:Key="BorderStyle">
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Padding" Value="4"/>
        </Style>

        <Style TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                Style="{StaticResource BorderStyle}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition x:Name="ContentRow" Height="0" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton OverridesDefaultStyle="True"
                                                  Template="{StaticResource ExpanderToggleButton}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    </ToggleButton>
                                    <ContentPresenter x:Name="HeaderHost" Grid.Column="1" Margin="4"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />
                                </Grid>
                                <ContentPresenter x:Name="ContentHost" Grid.Row="1" Margin="4" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding Height, ElementName=ContentHost}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.DataContext>
        <Binding Source="{StaticResource MainViewModel}"/>
    </Window.DataContext>

    <DockPanel>
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="8">
            <Button Content="First Blog" Command="{Binding FirstBlogCommand}"
                    Background="#FF070766"
                    Width="64" Height="64"
                    Margin="8">
                <Button.Template>
                    <ControlTemplate>
                        <Grid>
                            <!-- Background Layer -->
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <!-- Refraction Layer -->
                            <Ellipse x:Name="RefractionLayer">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" 
          CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.4" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <!-- Reflection Layer -->
                            <Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleY="0.5" />
                                </Path.RenderTransform>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure IsClosed="True" StartPoint="98.999,45.499">
                                            <BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" 
           Point3="85.502,51.029"/>
                                            <BezierSegment IsSmoothJoin="True" Point1="75.860,47.685" 
           Point2="69.111,45.196" Point3="50.167,45.196"/>
                                            <BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" 
           Point3="10.665,51.363"/>
                                            <BezierSegment IsSmoothJoin="True" Point1="7.469,52.580" 
           Point2="1.000,53.252" Point3="1.000,44.999"/>
                                            <BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" 
           Point3="2.519,34.286"/>
                                            <BezierSegment IsSmoothJoin="True" Point1="9.106,14.370" 
           Point2="27.875,0" Point3="50,0"/>
                                            <BezierSegment Point1="72.198,0" Point2="91.018,14.466" 
           Point3="97.546,34.485"/>
                                            <BezierSegment IsSmoothJoin="True" Point1="99.139,39.369" 
           Point2="98.999,40.084" Point3="98.999,45.499"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.Fill>
                                    <RadialGradientBrush GradientOrigin="0.498,0.526">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" 
            CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
                                                <TranslateTransform X="0" Y="0.5"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                        <GradientStop Offset="0.85" Color="#92FFFFFF"/>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <!-- ContentPresenter -->
                            <ContentPresenter Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <ListBox ItemsSource="{Binding Path=Blogs}"
                     SelectedItem="{Binding Path=SelectedBlog}"
                     Grid.Column="0">
                <ListBox.ItemTemplate>
                    <ItemContainerTemplate>
                        <Expander Header="{TemplateBinding Content}"
                                  HeaderTemplate="{StaticResource BlogDataTemplate}"
                                  Background="{StaticResource BlogBackgroundColorBrush}"
                                  TextBlock.Foreground="{StaticResource BlogForegroundColorBrush}">
                            <ItemsControl ItemsSource="{Binding Posts}"
                                          HorizontalContentAlignment="Stretch"
                                          Margin="16,0,0,0">
                                <ItemsControl.ItemTemplate>
                                    <ItemContainerTemplate>
                                        <Border Background="{StaticResource PostBackgroundColorBrush}"
                                                TextBlock.Foreground="{StaticResource PostForegroundColorBrush}"
                                                Style="{StaticResource BorderStyle}">
                                            <ContentControl Content="{TemplateBinding Content}"
                                                            ContentTemplate="{StaticResource PostDataTemplate}"/>
                                        </Border>
                                    </ItemContainerTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Expander>
                    </ItemContainerTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ContentControl Content="{Binding SelectedBlog}" Grid.Column="1">
                <ContentControl.ContentTemplate>
                    <DataTemplate DataType="{x:Type m:Blog}">
                        <Border Background="{StaticResource BlogBackgroundColorBrush}"
                                TextBlock.Foreground="{StaticResource BlogForegroundColorBrush}"
                                Style="{StaticResource BorderStyle}">
                            <StackPanel>
                                <ContentControl Content="{TemplateBinding Content}"
                                                ContentTemplate="{DynamicResource BlogDataTemplate}"/>
                                <ListBox ItemsSource="{Binding Posts}"
                                         Margin="16,0,0,0">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Border Background="{StaticResource PostBackgroundColorBrush}"
                                                    TextBlock.Foreground="{StaticResource PostForegroundColorBrush}"
                                                    Style="{StaticResource BorderStyle}">
                                                <ContentControl Content="{TemplateBinding Content}"
                                                                ContentTemplate="{StaticResource PostDataTemplate}"/>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ContentControl.ContentTemplate>
            </ContentControl>
        </Grid>
    </DockPanel>
</Window>
